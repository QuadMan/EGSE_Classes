<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:l="clr-namespace:EGSE.Defaults"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             x:Class="EGSE.WPF.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <l:BoolToIntConverter x:Key="BoolToIndexConverter" />
        <l:EgseTimeToStrConverter x:Key="EgseTimeToStrConverter" />
        <l:DeviceSpeedToStrConverter x:Key="DeviceSpeedToStrConverter" />
        <l:DeviceTraficToStrConverter x:Key="DeviceTraficToStrConverter" />        
        <l:BoolToIntConverter x:Key="boolToIndexConverter" />
        <l:BytesToStrConverter x:Key="bytesToStrConverter" />
        <SolidColorBrush x:Key="TextBrush" Color="White"/>
        <SolidColorBrush x:Key="OverBrush" Color="LightBlue"/>
        <SolidColorBrush x:Key="ClickBrush" Color="Orange"/>
        <SolidColorBrush x:Key="SelectBrush" Color="LightGreen"/>
        <SolidColorBrush x:Key="UnSelectBrush" Color="Red"/>
        <SolidColorBrush x:Key="UnConnectedBrush" Color="Tomato"/>
        <SolidColorBrush x:Key="ConnectedBrush" Color="PaleGreen"/>
        <SolidColorBrush x:Key="BackBrush" Color="LightBlue"/>          
        <FontFamily x:Key="BaseFontFamily">Consolas</FontFamily>
        <s:Double x:Key="BaseFontSize">13</s:Double>
        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border BorderBrush="Red" BorderThickness="2">
                                <AdornedElementPlaceholder />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="FlatRadioButton" TargetType="{x:Type ToggleButton}">
                <Border x:Name="Border" 
        		Background="{DynamicResource ClickBrush}"
        		Focusable="False" 
        		BorderThickness="0"
        		Margin="1">
                    <ContentPresenter HorizontalAlignment="Center"
        			VerticalAlignment="Center"                                        
        			Content="{TemplateBinding Content}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource OverBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonCheck" TargetType="{x:Type Button}">
            <Border x:Name="Border"
        	Background="{DynamicResource UnSelectBrush}" 
        	Focusable="False" 
        	BorderThickness="0"
        	Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
        		VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                    <Setter Property="Content" Value="ВКЛ"/>
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="ВЫКЛ"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource OverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonClick" TargetType="{x:Type Button}">
            <Border x:Name="Border"
        	Background="{DynamicResource ClickBrush}"   
        	Focusable="False" 
        	BorderThickness="0"
        	Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
        		VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource OverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabelConnected" TargetType="{x:Type Label}">
            <Border x:Name="Border"
        	Background="{DynamicResource UnConnectedBrush}"                                          
        	BorderThickness="0"
        	Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
        		VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ConnectedBrush}"/>
                    <Setter Property="Content" Value="Связь установлена"/>
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="Связь не установлена"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabelCheck" TargetType="{x:Type Label}">
            <Border x:Name="Border"
        	Background="{DynamicResource UnConnectedBrush}"                                          
        	BorderThickness="0"
        	Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
        		VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ConnectedBrush}"/>
                    <Setter Property="Content" Value="ВКЛ"/>
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="ВЫКЛ"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabel" TargetType="{x:Type Label}">
            <Border x:Name="Border"
        		Background="{DynamicResource TextBrush}"                                          
        		BorderThickness="0"
        		Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
        			VerticalAlignment="Center"
        			Content="{TemplateBinding Content}"/>
            </Border>
        </ControlTemplate>        
        <ControlTemplate x:Key="DataSendInError" TargetType="{x:Type TextBox}">
            <Border x:Name="Border"
                Margin="1"
                Background="{DynamicResource TextBrush}"
                BorderThickness="0">
                <Grid>
                    <ScrollViewer x:Name="PART_ContentHost"/>
                    <TextBlock Visibility="Hidden" x:Name="WatermarkText" Margin="3,1,0,0" Foreground="Gray" IsHitTestVisible="False" Text="Введите данные, например: AB 45 FF EE"/>
                    <TextBlock Visibility="Hidden" x:Name="ErrorText" Margin="6,1,0,0" Foreground="Red" IsHitTestVisible="False" Text="Некорректный ввод данных! Повторите ввод."/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                </Trigger>
                <Trigger Property="Text" Value=" ">
                    <Setter Property="Visibility" TargetName="ErrorText" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>            
        <ControlTemplate x:Key="FlatLabelTransmission" TargetType="{x:Type Label}">
            <Border x:Name="Border"
                        Background="{DynamicResource UnSelectBrush}"                                          
                        BorderThickness="0"
                        Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                    <Setter Property="Content" Value="Кадры передаются"/>
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="Кадры не передаются"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>         
        <ControlTemplate x:Key="NumberInError" TargetType="{x:Type TextBox}">
            <Border x:Name="Border"
                Margin="1"
                Background="{DynamicResource TextBrush}"
                BorderThickness="0">
                <Grid>
                    <ScrollViewer x:Name="PART_ContentHost"/>
                    <TextBlock Visibility="Hidden" x:Name="WatermarkText" Margin="3,1,0,0" Foreground="Gray" IsHitTestVisible="False" Text=""/>
                    <TextBlock Visibility="Hidden" x:Name="ErrorText" Margin="6,1,0,0" Foreground="Red" IsHitTestVisible="False" Text="Некорректный ввод данных!"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" TargetName="ErrorText" Value="Visible"/>
                </Trigger>
                <Trigger Property="Text" Value=" ">
                    <Setter Property="Visibility" TargetName="ErrorText" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonClickBusy" TargetType="{x:Type Button}">
            <Border x:Name="Border"
                        Background="{DynamicResource ClickBrush}"   
                        Focusable="False" 
                        BorderThickness="0"
                        Margin="1">
                <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="false">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ClickBrush}"/>
                    <Setter Property="Content" Value="Передать посылку"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource OverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectBrush}"/>
                </Trigger>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource UnSelectBrush}"/>
                    <Setter Property="Content" Value="Нельзя передать посылку (занят)"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
