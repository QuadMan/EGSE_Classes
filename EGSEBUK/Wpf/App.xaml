<Application x:Class="Egse.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:l="clr-namespace:Egse.Defaults"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             StartupUri="Windows/MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <l:BoolToIntConverter x:Key="BoolToIndexConverter" />
        <l:EgseTimeToStrConverter x:Key="EgseTimeToStrConverter" />
        <l:DeviceSpeedToStrConverter x:Key="DeviceSpeedToStrConverter" />
        <l:DeviceTraficToStrConverter x:Key="DeviceTraficToStrConverter" />
        <l:BytesToStrConverter x:Key="BytesToStrConverter" />
        <l:ShortToStrConverter x:Key="ShortToStrConverter" />
        <l:EnumToBoolConverter x:Key="EnumToBoolConverter" />
        <l:ReverseShortConverter x:Key="ReverseShortConverter" />
        <SolidColorBrush x:Key="TextBrush" Color="White" />
        <SolidColorBrush x:Key="OverBrush" Color="LightBlue" />
        <SolidColorBrush x:Key="ClickBrush" Color="White" />
        <SolidColorBrush x:Key="SelectBrush" Color="LightGreen" />
        <SolidColorBrush x:Key="CheckBrush2" Color="Maroon" />
        <SolidColorBrush x:Key="UnableBrush" Color="Gray" />
        <SolidColorBrush x:Key="GrayBrush" Color="Gray" />
        <SolidColorBrush x:Key="UnSelectBrush" Color="Red" />
        <SolidColorBrush x:Key="UnConnectedBrush" Color="Tomato" />
        <SolidColorBrush x:Key="UnActiveBrush" Color="White" />
        <SolidColorBrush x:Key="ConnectedBrush" Color="PaleGreen" />
        <SolidColorBrush x:Key="BackBrush" Color="LightBlue" />
        <FontFamily x:Key="BaseFontFamily">Consolas</FontFamily>
        <s:Double x:Key="BaseFontSize">13</s:Double>
        <s:Double x:Key="HeaderFontSize">16</s:Double>
        <Style x:Key="ControlEventLog" TargetType="{x:Type Control}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="MouseLoggerEvent" />
        </Style>
        <Style BasedOn="{StaticResource ControlEventLog}" TargetType="{x:Type Button}" />
        <Style BasedOn="{StaticResource ControlEventLog}" TargetType="{x:Type CheckBox}" />
        <Style BasedOn="{StaticResource ControlEventLog}" TargetType="{x:Type RadioButton}" />
        <Style x:Key="WatermarkLabelStyle">
            <Setter Property="TextBlock.Foreground" Value="{x:Static SystemColors.ControlDarkBrush}" />
            <Setter Property="FrameworkElement.Opacity" Value="0.8" />
            <Setter Property="TextBlock.FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="TextBlock.FontStyle" Value="Italic" />
            <Setter Property="TextBlock.Margin" Value="4,0,0,0" />
        </Style>
        <Style x:Key="FlatHeader" TargetType="Label">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border x:Name="Border"
                                Margin="1"
                                Background="{StaticResource TextBrush}"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxInError" TargetType="{x:Type ComboBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border BorderBrush="Red" BorderThickness="2">
                                <AdornedElementPlaceholder />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FormattedTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Background" Value="{StaticResource TextBrush}" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border BorderBrush="Red" BorderThickness="2">
                                <AdornedElementPlaceholder />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="FlatRadioButton" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource ClickBrush}"
                    BorderThickness="0"
                    Focusable="False">
                <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource UnableBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatRadioButton2" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="White"
                    BorderThickness="0"
                    Focusable="False">
                <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource CheckBrush2}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource UnableBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="HComboBox" TargetType="ContentControl">
            <StackPanel Orientation="Vertical">
                <Label Margin="0"
                       Content="{Binding ComboBoxHeader}"
                       DataContext="{TemplateBinding DataContext}"
                       Padding="5,5,5,1"
                       Target="comboBox" />
                <ComboBox x:Name="comboBox"
                          Width="72"
                          Margin="5,0,5,5"
                          DataContext="{TemplateBinding DataContext}"
                          ItemsSource="{Binding ComboSourceList}"
                          Padding="5,1,5,5"
                          SelectedItem="{Binding ComboSelectedItem}" />
            </StackPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonCheck" TargetType="{x:Type Button}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource UnSelectBrush}"
                    BorderThickness="0"
                    Focusable="False">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                    <Setter Property="Content" Value="ВКЛ" />
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="ВЫКЛ" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource GrayBrush}" />
                    <Setter Property="Content" Value="[отключено]" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonClick" TargetType="{x:Type Button}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource ClickBrush}"
                    BorderThickness="0"
                    Focusable="False">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabelActived" TargetType="{x:Type Label}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource UnActiveBrush}"
                    BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ConnectedBrush}" />
                    <Setter Property="Content" Value="Активен" />
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="Не активен" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabelConnected" TargetType="{x:Type Label}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource UnConnectedBrush}"
                    BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ConnectedBrush}" />
                    <Setter Property="Content" Value="Связь установлена" />
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="Связь не установлена" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabelCheck" TargetType="{x:Type Label}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource UnActiveBrush}"
                    BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ConnectedBrush}" />
                    <Setter Property="Content" Value="ВКЛ" />
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="ВЫКЛ" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabel" TargetType="{x:Type Label}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource TextBrush}"
                    BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}" />
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="DataSendInError" TargetType="{x:Type TextBox}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource TextBrush}"
                    BorderThickness="0">
                <Grid>
                    <ScrollViewer x:Name="PART_ContentHost" />
                    <TextBlock x:Name="WatermarkText"
                               Margin="3,1,0,0"
                               Foreground="Gray"
                               IsHitTestVisible="False"
                               Text="Введите данные, например: AB 45 FF EE"
                               Visibility="Hidden" />
                    <TextBlock x:Name="ErrorText"
                               Margin="6,1,0,0"
                               Foreground="Red"
                               IsHitTestVisible="False"
                               Text="Некорректный ввод данных! Повторите ввод."
                               Visibility="Hidden" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter TargetName="WatermarkText" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="Text" Value=" ">
                    <Setter TargetName="ErrorText" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FilePreviewer" TargetType="{x:Type TextBox}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource SelectBrush}"
                    BorderThickness="0">
                <Grid>
                    <ScrollViewer x:Name="PART_ContentHost" />
                    <TextBlock x:Name="WatermarkText"
                               Margin="0"
                               Background="{StaticResource TextBrush}"
                               Foreground="Gray"
                               IsHitTestVisible="False"
                               Text="Файл отсутствует..."
                               Visibility="Hidden" />
                    <TextBlock x:Name="ErrorText"
                               Margin="0"
                               Background="{StaticResource TextBrush}"
                               Foreground="Red"
                               IsHitTestVisible="False"
                               Text="Ошибка! Не удалось открыть файл."
                               Visibility="Hidden" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter TargetName="WatermarkText" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="Text" Value=" ">
                    <Setter TargetName="ErrorText" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatLabelTransmission" TargetType="{x:Type Label}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource UnConnectedBrush}"
                    BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Tag" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ConnectedBrush}" />
                    <Setter Property="Content" Value="Кадры передаются" />
                </Trigger>
                <Trigger Property="Tag" Value="false">
                    <Setter Property="Content" Value="Кадры не передаются" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="NumberInError" TargetType="{x:Type TextBox}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource TextBrush}"
                    BorderThickness="0">
                <Grid>
                    <ScrollViewer x:Name="PART_ContentHost" />
                    <TextBlock x:Name="WatermarkText"
                               Margin="3,1,0,0"
                               Foreground="Gray"
                               IsHitTestVisible="False"
                               Text=""
                               Visibility="Hidden" />
                    <TextBlock x:Name="ErrorText"
                               Margin="6,1,0,0"
                               Foreground="Red"
                               IsHitTestVisible="False"
                               Text="Некорректный ввод данных!"
                               Visibility="Hidden" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter TargetName="ErrorText" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="Text" Value=" ">
                    <Setter TargetName="ErrorText" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonClickBusy" TargetType="{x:Type Button}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource ClickBrush}"
                    BorderThickness="0"
                    Focusable="True">
                <ContentPresenter x:Name="ContentPresenter"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource GrayBrush}" />
                    <Setter TargetName="ContentPresenter" Property="Content" Value="Нельзя передать посылку (занят)" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FlatButtonClickDefault" TargetType="{x:Type Button}">
            <Border x:Name="Border"
                    Margin="1"
                    Background="{StaticResource ClickBrush}"
                    BorderThickness="0"
                    Focusable="True">
                <ContentPresenter x:Name="ContentPresenter"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource GrayBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
